#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RezerveBeliteHavaPeimaCS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RezerveBelitTotal")]
	public partial class LSC_BeliteHavaPeymaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustumer(Custumer instance);
    partial void UpdateCustumer(Custumer instance);
    partial void DeleteCustumer(Custumer instance);
    partial void InsertRezerveTicket(RezerveTicket instance);
    partial void UpdateRezerveTicket(RezerveTicket instance);
    partial void DeleteRezerveTicket(RezerveTicket instance);
    partial void InsertServicesDef(ServicesDef instance);
    partial void UpdateServicesDef(ServicesDef instance);
    partial void DeleteServicesDef(ServicesDef instance);
    partial void InsertServiceType(ServiceType instance);
    partial void UpdateServiceType(ServiceType instance);
    partial void DeleteServiceType(ServiceType instance);
    partial void InsertStaffsTable(StaffsTable instance);
    partial void UpdateStaffsTable(StaffsTable instance);
    partial void DeleteStaffsTable(StaffsTable instance);
    partial void InsertuserInfo(userInfo instance);
    partial void UpdateuserInfo(userInfo instance);
    partial void DeleteuserInfo(userInfo instance);
    #endregion
		
		public LSC_BeliteHavaPeymaDataContext() : 
				base(global::RezerveBeliteHavaPeimaCS.Properties.Settings.Default.RezerveBelitTotalConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public LSC_BeliteHavaPeymaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LSC_BeliteHavaPeymaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LSC_BeliteHavaPeymaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LSC_BeliteHavaPeymaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Custumer> Custumers
		{
			get
			{
				return this.GetTable<Custumer>();
			}
		}
		
		public System.Data.Linq.Table<RezerveTicket> RezerveTickets
		{
			get
			{
				return this.GetTable<RezerveTicket>();
			}
		}
		
		public System.Data.Linq.Table<ServicesDef> ServicesDefs
		{
			get
			{
				return this.GetTable<ServicesDef>();
			}
		}
		
		public System.Data.Linq.Table<ServiceType> ServiceTypes
		{
			get
			{
				return this.GetTable<ServiceType>();
			}
		}
		
		public System.Data.Linq.Table<StaffsTable> StaffsTables
		{
			get
			{
				return this.GetTable<StaffsTable>();
			}
		}
		
		public System.Data.Linq.Table<userInfo> userInfos
		{
			get
			{
				return this.GetTable<userInfo>();
			}
		}
		
		public System.Data.Linq.Table<xtblBelitha> xtblBelithas
		{
			get
			{
				return this.GetTable<xtblBelitha>();
			}
		}
		
		public System.Data.Linq.Table<xtblService> xtblServices
		{
			get
			{
				return this.GetTable<xtblService>();
			}
		}
		
		public System.Data.Linq.Table<xtblCustomerStatus> xtblCustomerStatus
		{
			get
			{
				return this.GetTable<xtblCustomerStatus>();
			}
		}
		
		public System.Data.Linq.Table<xtblPardakhti> xtblPardakhtis
		{
			get
			{
				return this.GetTable<xtblPardakhti>();
			}
		}
		
		public System.Data.Linq.Table<xtblForooshRoozane> xtblForooshRoozanes
		{
			get
			{
				return this.GetTable<xtblForooshRoozane>();
			}
		}
		
		public System.Data.Linq.Table<xtblRezervBelit> xtblRezervBelits
		{
			get
			{
				return this.GetTable<xtblRezervBelit>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Custumers")]
	public partial class Custumer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private string _NameSname;
		
		private string _PhoneNum;
		
		private string _FaxNum;
		
		private string _Notes;
		
		private EntitySet<RezerveTicket> _RezerveTickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnNameSnameChanging(string value);
    partial void OnNameSnameChanged();
    partial void OnPhoneNumChanging(string value);
    partial void OnPhoneNumChanged();
    partial void OnFaxNumChanging(string value);
    partial void OnFaxNumChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Custumer()
		{
			this._RezerveTickets = new EntitySet<RezerveTicket>(new Action<RezerveTicket>(this.attach_RezerveTickets), new Action<RezerveTicket>(this.detach_RezerveTickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSname", DbType="NVarChar(100)")]
		public string NameSname
		{
			get
			{
				return this._NameSname;
			}
			set
			{
				if ((this._NameSname != value))
				{
					this.OnNameSnameChanging(value);
					this.SendPropertyChanging();
					this._NameSname = value;
					this.SendPropertyChanged("NameSname");
					this.OnNameSnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNum", DbType="NVarChar(100)")]
		public string PhoneNum
		{
			get
			{
				return this._PhoneNum;
			}
			set
			{
				if ((this._PhoneNum != value))
				{
					this.OnPhoneNumChanging(value);
					this.SendPropertyChanging();
					this._PhoneNum = value;
					this.SendPropertyChanged("PhoneNum");
					this.OnPhoneNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNum", DbType="NVarChar(100)")]
		public string FaxNum
		{
			get
			{
				return this._FaxNum;
			}
			set
			{
				if ((this._FaxNum != value))
				{
					this.OnFaxNumChanging(value);
					this.SendPropertyChanging();
					this._FaxNum = value;
					this.SendPropertyChanged("FaxNum");
					this.OnFaxNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Custumer_RezerveTicket", Storage="_RezerveTickets", ThisKey="CustomerID", OtherKey="RezerverID")]
		public EntitySet<RezerveTicket> RezerveTickets
		{
			get
			{
				return this._RezerveTickets;
			}
			set
			{
				this._RezerveTickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RezerveTickets(RezerveTicket entity)
		{
			this.SendPropertyChanging();
			entity.Custumer = this;
		}
		
		private void detach_RezerveTickets(RezerveTicket entity)
		{
			this.SendPropertyChanging();
			entity.Custumer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RezerveTickets")]
	public partial class RezerveTicket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RezerveID;
		
		private string _RezerveDate;
		
		private System.Nullable<int> _StaffID;
		
		private int _RezerverID;
		
		private int _ServiceID;
		
		private int _QuanTity;
		
		private System.Nullable<double> _BianehPardakhti;
		
		private System.Nullable<double> _Mandeh;
		
		private string _Notes;
		
		private EntityRef<Custumer> _Custumer;
		
		private EntityRef<ServicesDef> _ServicesDef;
		
		private EntityRef<StaffsTable> _StaffsTable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRezerveIDChanging(int value);
    partial void OnRezerveIDChanged();
    partial void OnRezerveDateChanging(string value);
    partial void OnRezerveDateChanged();
    partial void OnStaffIDChanging(System.Nullable<int> value);
    partial void OnStaffIDChanged();
    partial void OnRezerverIDChanging(int value);
    partial void OnRezerverIDChanged();
    partial void OnServiceIDChanging(int value);
    partial void OnServiceIDChanged();
    partial void OnQuanTityChanging(int value);
    partial void OnQuanTityChanged();
    partial void OnBianehPardakhtiChanging(System.Nullable<double> value);
    partial void OnBianehPardakhtiChanged();
    partial void OnMandehChanging(System.Nullable<double> value);
    partial void OnMandehChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public RezerveTicket()
		{
			this._Custumer = default(EntityRef<Custumer>);
			this._ServicesDef = default(EntityRef<ServicesDef>);
			this._StaffsTable = default(EntityRef<StaffsTable>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerveID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int RezerveID
		{
			get
			{
				return this._RezerveID;
			}
			set
			{
				if ((this._RezerveID != value))
				{
					this.OnRezerveIDChanging(value);
					this.SendPropertyChanging();
					this._RezerveID = value;
					this.SendPropertyChanged("RezerveID");
					this.OnRezerveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerveDate", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string RezerveDate
		{
			get
			{
				return this._RezerveDate;
			}
			set
			{
				if ((this._RezerveDate != value))
				{
					this.OnRezerveDateChanging(value);
					this.SendPropertyChanging();
					this._RezerveDate = value;
					this.SendPropertyChanged("RezerveDate");
					this.OnRezerveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="Int")]
		public System.Nullable<int> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._StaffsTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerverID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RezerverID
		{
			get
			{
				return this._RezerverID;
			}
			set
			{
				if ((this._RezerverID != value))
				{
					if (this._Custumer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRezerverIDChanging(value);
					this.SendPropertyChanging();
					this._RezerverID = value;
					this.SendPropertyChanged("RezerverID");
					this.OnRezerverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					if (this._ServicesDef.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanTity", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int QuanTity
		{
			get
			{
				return this._QuanTity;
			}
			set
			{
				if ((this._QuanTity != value))
				{
					this.OnQuanTityChanging(value);
					this.SendPropertyChanging();
					this._QuanTity = value;
					this.SendPropertyChanged("QuanTity");
					this.OnQuanTityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BianehPardakhti", DbType="Float")]
		public System.Nullable<double> BianehPardakhti
		{
			get
			{
				return this._BianehPardakhti;
			}
			set
			{
				if ((this._BianehPardakhti != value))
				{
					this.OnBianehPardakhtiChanging(value);
					this.SendPropertyChanging();
					this._BianehPardakhti = value;
					this.SendPropertyChanged("BianehPardakhti");
					this.OnBianehPardakhtiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mandeh", DbType="Float")]
		public System.Nullable<double> Mandeh
		{
			get
			{
				return this._Mandeh;
			}
			set
			{
				if ((this._Mandeh != value))
				{
					this.OnMandehChanging(value);
					this.SendPropertyChanging();
					this._Mandeh = value;
					this.SendPropertyChanged("Mandeh");
					this.OnMandehChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Custumer_RezerveTicket", Storage="_Custumer", ThisKey="RezerverID", OtherKey="CustomerID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Custumer Custumer
		{
			get
			{
				return this._Custumer.Entity;
			}
			set
			{
				Custumer previousValue = this._Custumer.Entity;
				if (((previousValue != value) 
							|| (this._Custumer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Custumer.Entity = null;
						previousValue.RezerveTickets.Remove(this);
					}
					this._Custumer.Entity = value;
					if ((value != null))
					{
						value.RezerveTickets.Add(this);
						this._RezerverID = value.CustomerID;
					}
					else
					{
						this._RezerverID = default(int);
					}
					this.SendPropertyChanged("Custumer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicesDef_RezerveTicket", Storage="_ServicesDef", ThisKey="ServiceID", OtherKey="ServiceID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ServicesDef ServicesDef
		{
			get
			{
				return this._ServicesDef.Entity;
			}
			set
			{
				ServicesDef previousValue = this._ServicesDef.Entity;
				if (((previousValue != value) 
							|| (this._ServicesDef.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServicesDef.Entity = null;
						previousValue.RezerveTickets.Remove(this);
					}
					this._ServicesDef.Entity = value;
					if ((value != null))
					{
						value.RezerveTickets.Add(this);
						this._ServiceID = value.ServiceID;
					}
					else
					{
						this._ServiceID = default(int);
					}
					this.SendPropertyChanged("ServicesDef");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffsTable_RezerveTicket", Storage="_StaffsTable", ThisKey="StaffID", OtherKey="StaffID", IsForeignKey=true, DeleteRule="CASCADE")]
		public StaffsTable StaffsTable
		{
			get
			{
				return this._StaffsTable.Entity;
			}
			set
			{
				StaffsTable previousValue = this._StaffsTable.Entity;
				if (((previousValue != value) 
							|| (this._StaffsTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StaffsTable.Entity = null;
						previousValue.RezerveTickets.Remove(this);
					}
					this._StaffsTable.Entity = value;
					if ((value != null))
					{
						value.RezerveTickets.Add(this);
						this._StaffID = value.StaffID;
					}
					else
					{
						this._StaffID = default(Nullable<int>);
					}
					this.SendPropertyChanged("StaffsTable");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServicesDef")]
	public partial class ServicesDef : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceID;
		
		private string _ServiceDescript;
		
		private string _ServiceDate;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<bool> _ExpireBit;
		
		private System.Nullable<int> _ServiceTypeID;
		
		private EntitySet<RezerveTicket> _RezerveTickets;
		
		private EntityRef<ServiceType> _ServiceType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceIDChanging(int value);
    partial void OnServiceIDChanged();
    partial void OnServiceDescriptChanging(string value);
    partial void OnServiceDescriptChanged();
    partial void OnServiceDateChanging(string value);
    partial void OnServiceDateChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnExpireBitChanging(System.Nullable<bool> value);
    partial void OnExpireBitChanged();
    partial void OnServiceTypeIDChanging(System.Nullable<int> value);
    partial void OnServiceTypeIDChanged();
    #endregion
		
		public ServicesDef()
		{
			this._RezerveTickets = new EntitySet<RezerveTicket>(new Action<RezerveTicket>(this.attach_RezerveTickets), new Action<RezerveTicket>(this.detach_RezerveTickets));
			this._ServiceType = default(EntityRef<ServiceType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDescript", DbType="NVarChar(500)")]
		public string ServiceDescript
		{
			get
			{
				return this._ServiceDescript;
			}
			set
			{
				if ((this._ServiceDescript != value))
				{
					this.OnServiceDescriptChanging(value);
					this.SendPropertyChanging();
					this._ServiceDescript = value;
					this.SendPropertyChanged("ServiceDescript");
					this.OnServiceDescriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDate", DbType="NVarChar(10)")]
		public string ServiceDate
		{
			get
			{
				return this._ServiceDate;
			}
			set
			{
				if ((this._ServiceDate != value))
				{
					this.OnServiceDateChanging(value);
					this.SendPropertyChanging();
					this._ServiceDate = value;
					this.SendPropertyChanged("ServiceDate");
					this.OnServiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireBit", DbType="Bit")]
		public System.Nullable<bool> ExpireBit
		{
			get
			{
				return this._ExpireBit;
			}
			set
			{
				if ((this._ExpireBit != value))
				{
					this.OnExpireBitChanging(value);
					this.SendPropertyChanging();
					this._ExpireBit = value;
					this.SendPropertyChanged("ExpireBit");
					this.OnExpireBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTypeID", DbType="Int")]
		public System.Nullable<int> ServiceTypeID
		{
			get
			{
				return this._ServiceTypeID;
			}
			set
			{
				if ((this._ServiceTypeID != value))
				{
					if (this._ServiceType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServiceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceTypeID = value;
					this.SendPropertyChanged("ServiceTypeID");
					this.OnServiceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServicesDef_RezerveTicket", Storage="_RezerveTickets", ThisKey="ServiceID", OtherKey="ServiceID")]
		public EntitySet<RezerveTicket> RezerveTickets
		{
			get
			{
				return this._RezerveTickets;
			}
			set
			{
				this._RezerveTickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceType_ServicesDef", Storage="_ServiceType", ThisKey="ServiceTypeID", OtherKey="ServiceTypeID", IsForeignKey=true, DeleteRule="CASCADE")]
		public ServiceType ServiceType
		{
			get
			{
				return this._ServiceType.Entity;
			}
			set
			{
				ServiceType previousValue = this._ServiceType.Entity;
				if (((previousValue != value) 
							|| (this._ServiceType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceType.Entity = null;
						previousValue.ServicesDefs.Remove(this);
					}
					this._ServiceType.Entity = value;
					if ((value != null))
					{
						value.ServicesDefs.Add(this);
						this._ServiceTypeID = value.ServiceTypeID;
					}
					else
					{
						this._ServiceTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ServiceType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RezerveTickets(RezerveTicket entity)
		{
			this.SendPropertyChanging();
			entity.ServicesDef = this;
		}
		
		private void detach_RezerveTickets(RezerveTicket entity)
		{
			this.SendPropertyChanging();
			entity.ServicesDef = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceTypes")]
	public partial class ServiceType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ServiceTypeID;
		
		private string _ServiceDesCript;
		
		private EntitySet<ServicesDef> _ServicesDefs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceTypeIDChanging(int value);
    partial void OnServiceTypeIDChanged();
    partial void OnServiceDesCriptChanging(string value);
    partial void OnServiceDesCriptChanged();
    #endregion
		
		public ServiceType()
		{
			this._ServicesDefs = new EntitySet<ServicesDef>(new Action<ServicesDef>(this.attach_ServicesDefs), new Action<ServicesDef>(this.detach_ServicesDefs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ServiceTypeID
		{
			get
			{
				return this._ServiceTypeID;
			}
			set
			{
				if ((this._ServiceTypeID != value))
				{
					this.OnServiceTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceTypeID = value;
					this.SendPropertyChanged("ServiceTypeID");
					this.OnServiceTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDesCript", DbType="NVarChar(50)")]
		public string ServiceDesCript
		{
			get
			{
				return this._ServiceDesCript;
			}
			set
			{
				if ((this._ServiceDesCript != value))
				{
					this.OnServiceDesCriptChanging(value);
					this.SendPropertyChanging();
					this._ServiceDesCript = value;
					this.SendPropertyChanged("ServiceDesCript");
					this.OnServiceDesCriptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceType_ServicesDef", Storage="_ServicesDefs", ThisKey="ServiceTypeID", OtherKey="ServiceTypeID")]
		public EntitySet<ServicesDef> ServicesDefs
		{
			get
			{
				return this._ServicesDefs;
			}
			set
			{
				this._ServicesDefs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServicesDefs(ServicesDef entity)
		{
			this.SendPropertyChanging();
			entity.ServiceType = this;
		}
		
		private void detach_ServicesDefs(ServicesDef entity)
		{
			this.SendPropertyChanging();
			entity.ServiceType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StaffsTable")]
	public partial class StaffsTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffID;
		
		private string _NameSname;
		
		private string _PhoneNum;
		
		private string _FaxNum;
		
		private string _Notes;
		
		private EntitySet<RezerveTicket> _RezerveTickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffIDChanging(int value);
    partial void OnStaffIDChanged();
    partial void OnNameSnameChanging(string value);
    partial void OnNameSnameChanged();
    partial void OnPhoneNumChanging(string value);
    partial void OnPhoneNumChanged();
    partial void OnFaxNumChanging(string value);
    partial void OnFaxNumChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public StaffsTable()
		{
			this._RezerveTickets = new EntitySet<RezerveTicket>(new Action<RezerveTicket>(this.attach_RezerveTickets), new Action<RezerveTicket>(this.detach_RezerveTickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSname", DbType="NVarChar(100)")]
		public string NameSname
		{
			get
			{
				return this._NameSname;
			}
			set
			{
				if ((this._NameSname != value))
				{
					this.OnNameSnameChanging(value);
					this.SendPropertyChanging();
					this._NameSname = value;
					this.SendPropertyChanged("NameSname");
					this.OnNameSnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNum", DbType="NVarChar(100)")]
		public string PhoneNum
		{
			get
			{
				return this._PhoneNum;
			}
			set
			{
				if ((this._PhoneNum != value))
				{
					this.OnPhoneNumChanging(value);
					this.SendPropertyChanging();
					this._PhoneNum = value;
					this.SendPropertyChanged("PhoneNum");
					this.OnPhoneNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FaxNum", DbType="NVarChar(100)")]
		public string FaxNum
		{
			get
			{
				return this._FaxNum;
			}
			set
			{
				if ((this._FaxNum != value))
				{
					this.OnFaxNumChanging(value);
					this.SendPropertyChanging();
					this._FaxNum = value;
					this.SendPropertyChanged("FaxNum");
					this.OnFaxNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StaffsTable_RezerveTicket", Storage="_RezerveTickets", ThisKey="StaffID", OtherKey="StaffID")]
		public EntitySet<RezerveTicket> RezerveTickets
		{
			get
			{
				return this._RezerveTickets;
			}
			set
			{
				this._RezerveTickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RezerveTickets(RezerveTicket entity)
		{
			this.SendPropertyChanging();
			entity.StaffsTable = this;
		}
		
		private void detach_RezerveTickets(RezerveTicket entity)
		{
			this.SendPropertyChanging();
			entity.StaffsTable = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userInfo")]
	public partial class userInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userID;
		
		private string _UserName;
		
		private string _PassWord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    #endregion
		
		public userInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="NVarChar(50)")]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.xtblBelitha")]
	public partial class xtblBelitha
	{
		
		private string _NameSname;
		
		private string _PhoneNum;
		
		private string _ServiceDescript;
		
		private int _RezerveID;
		
		private string _RezerveDate;
		
		private int _QuanTity;
		
		private int _CustomerID;
		
		public xtblBelitha()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSname", DbType="NVarChar(100)")]
		public string NameSname
		{
			get
			{
				return this._NameSname;
			}
			set
			{
				if ((this._NameSname != value))
				{
					this._NameSname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNum", DbType="NVarChar(100)")]
		public string PhoneNum
		{
			get
			{
				return this._PhoneNum;
			}
			set
			{
				if ((this._PhoneNum != value))
				{
					this._PhoneNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDescript", DbType="NVarChar(500)")]
		public string ServiceDescript
		{
			get
			{
				return this._ServiceDescript;
			}
			set
			{
				if ((this._ServiceDescript != value))
				{
					this._ServiceDescript = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerveID", DbType="Int NOT NULL")]
		public int RezerveID
		{
			get
			{
				return this._RezerveID;
			}
			set
			{
				if ((this._RezerveID != value))
				{
					this._RezerveID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerveDate", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string RezerveDate
		{
			get
			{
				return this._RezerveDate;
			}
			set
			{
				if ((this._RezerveDate != value))
				{
					this._RezerveDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanTity", DbType="Int NOT NULL")]
		public int QuanTity
		{
			get
			{
				return this._QuanTity;
			}
			set
			{
				if ((this._QuanTity != value))
				{
					this._QuanTity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.xtblServices")]
	public partial class xtblService
	{
		
		private int _ServiceID;
		
		private string _ServiceDescript;
		
		private string _ServiceDate;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<bool> _ExpireBit;
		
		private string _Expr1;
		
		public xtblService()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this._ServiceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDescript", DbType="NVarChar(500)")]
		public string ServiceDescript
		{
			get
			{
				return this._ServiceDescript;
			}
			set
			{
				if ((this._ServiceDescript != value))
				{
					this._ServiceDescript = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDate", DbType="NVarChar(10)")]
		public string ServiceDate
		{
			get
			{
				return this._ServiceDate;
			}
			set
			{
				if ((this._ServiceDate != value))
				{
					this._ServiceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpireBit", DbType="Bit")]
		public System.Nullable<bool> ExpireBit
		{
			get
			{
				return this._ExpireBit;
			}
			set
			{
				if ((this._ExpireBit != value))
				{
					this._ExpireBit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(50)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.xtblCustomerStatus")]
	public partial class xtblCustomerStatus
	{
		
		private int _CustomerID;
		
		private string _NameSname;
		
		private string _PhoneNum;
		
		private System.Nullable<double> _BianehPardakhti;
		
		private System.Nullable<double> _Mandeh;
		
		private int _RezerverID;
		
		private string _ServiceDescript;
		
		private string _ServiceDate;
		
		public xtblCustomerStatus()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSname", DbType="NVarChar(100)")]
		public string NameSname
		{
			get
			{
				return this._NameSname;
			}
			set
			{
				if ((this._NameSname != value))
				{
					this._NameSname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNum", DbType="NVarChar(100)")]
		public string PhoneNum
		{
			get
			{
				return this._PhoneNum;
			}
			set
			{
				if ((this._PhoneNum != value))
				{
					this._PhoneNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BianehPardakhti", DbType="Float")]
		public System.Nullable<double> BianehPardakhti
		{
			get
			{
				return this._BianehPardakhti;
			}
			set
			{
				if ((this._BianehPardakhti != value))
				{
					this._BianehPardakhti = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mandeh", DbType="Float")]
		public System.Nullable<double> Mandeh
		{
			get
			{
				return this._Mandeh;
			}
			set
			{
				if ((this._Mandeh != value))
				{
					this._Mandeh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerverID", DbType="Int NOT NULL")]
		public int RezerverID
		{
			get
			{
				return this._RezerverID;
			}
			set
			{
				if ((this._RezerverID != value))
				{
					this._RezerverID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDescript", DbType="NVarChar(500)")]
		public string ServiceDescript
		{
			get
			{
				return this._ServiceDescript;
			}
			set
			{
				if ((this._ServiceDescript != value))
				{
					this._ServiceDescript = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDate", DbType="NVarChar(10)")]
		public string ServiceDate
		{
			get
			{
				return this._ServiceDate;
			}
			set
			{
				if ((this._ServiceDate != value))
				{
					this._ServiceDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.xtblPardakhti")]
	public partial class xtblPardakhti
	{
		
		private int _CustomerID;
		
		private string _NameSname;
		
		private int _RezerverID;
		
		private string _RezerveDate;
		
		private string _ServiceDescript;
		
		private System.Nullable<double> _BianehPardakhti;
		
		public xtblPardakhti()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSname", DbType="NVarChar(100)")]
		public string NameSname
		{
			get
			{
				return this._NameSname;
			}
			set
			{
				if ((this._NameSname != value))
				{
					this._NameSname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerverID", DbType="Int NOT NULL")]
		public int RezerverID
		{
			get
			{
				return this._RezerverID;
			}
			set
			{
				if ((this._RezerverID != value))
				{
					this._RezerverID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerveDate", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string RezerveDate
		{
			get
			{
				return this._RezerveDate;
			}
			set
			{
				if ((this._RezerveDate != value))
				{
					this._RezerveDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDescript", DbType="NVarChar(500)")]
		public string ServiceDescript
		{
			get
			{
				return this._ServiceDescript;
			}
			set
			{
				if ((this._ServiceDescript != value))
				{
					this._ServiceDescript = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BianehPardakhti", DbType="Float")]
		public System.Nullable<double> BianehPardakhti
		{
			get
			{
				return this._BianehPardakhti;
			}
			set
			{
				if ((this._BianehPardakhti != value))
				{
					this._BianehPardakhti = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.xtblForooshRoozane")]
	public partial class xtblForooshRoozane
	{
		
		private string _RezerveDate;
		
		private System.Nullable<double> _ForooshRoozane;
		
		public xtblForooshRoozane()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerveDate", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string RezerveDate
		{
			get
			{
				return this._RezerveDate;
			}
			set
			{
				if ((this._RezerveDate != value))
				{
					this._RezerveDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForooshRoozane", DbType="Float")]
		public System.Nullable<double> ForooshRoozane
		{
			get
			{
				return this._ForooshRoozane;
			}
			set
			{
				if ((this._ForooshRoozane != value))
				{
					this._ForooshRoozane = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.xtblRezervBelit")]
	public partial class xtblRezervBelit
	{
		
		private string _Notes;
		
		private System.Nullable<double> _Mandeh;
		
		private System.Nullable<double> _BianehPardakhti;
		
		private int _QuanTity;
		
		private string _ServiceDescript;
		
		private int _RezerverID;
		
		private System.Nullable<int> _StaffID;
		
		private int _RezerveID;
		
		private string _RezerveDate;
		
		public xtblRezervBelit()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(500)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mandeh", DbType="Float")]
		public System.Nullable<double> Mandeh
		{
			get
			{
				return this._Mandeh;
			}
			set
			{
				if ((this._Mandeh != value))
				{
					this._Mandeh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BianehPardakhti", DbType="Float")]
		public System.Nullable<double> BianehPardakhti
		{
			get
			{
				return this._BianehPardakhti;
			}
			set
			{
				if ((this._BianehPardakhti != value))
				{
					this._BianehPardakhti = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuanTity", DbType="Int NOT NULL")]
		public int QuanTity
		{
			get
			{
				return this._QuanTity;
			}
			set
			{
				if ((this._QuanTity != value))
				{
					this._QuanTity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceDescript", DbType="NVarChar(500)")]
		public string ServiceDescript
		{
			get
			{
				return this._ServiceDescript;
			}
			set
			{
				if ((this._ServiceDescript != value))
				{
					this._ServiceDescript = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerverID", DbType="Int NOT NULL")]
		public int RezerverID
		{
			get
			{
				return this._RezerverID;
			}
			set
			{
				if ((this._RezerverID != value))
				{
					this._RezerverID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="Int")]
		public System.Nullable<int> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					this._StaffID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerveID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int RezerveID
		{
			get
			{
				return this._RezerveID;
			}
			set
			{
				if ((this._RezerveID != value))
				{
					this._RezerveID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RezerveDate", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string RezerveDate
		{
			get
			{
				return this._RezerveDate;
			}
			set
			{
				if ((this._RezerveDate != value))
				{
					this._RezerveDate = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
